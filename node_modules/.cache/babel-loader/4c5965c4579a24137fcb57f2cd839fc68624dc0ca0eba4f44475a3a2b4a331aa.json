{"ast":null,"code":"\"use client\";\n\n// src/useIsFetching.ts\nimport * as React from \"react\";\nimport { notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsFetching(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  const queryCache = client.getQueryCache();\n  return React.useSyncExternalStore(React.useCallback(onStoreChange => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)), [queryCache]), () => client.isFetching(filters), () => client.isFetching(filters));\n}\nexport { useIsFetching };","map":{"version":3,"mappings":";;;AACA,YAAYA,WAAW;AACvB,SAASC,qBAAqB;AAE9B,SAASC,sBAAsB;AAGxB,SAASC,cACdC,SACAC,aACQ;EACR,MAAMC,SAASJ,eAAeG,WAAW;EACzC,MAAME,aAAaD,OAAOE,eAAc;EAExC,OAAaR,2BACLA,kBACHS,iBACCF,WAAWG,UAAUT,cAAcU,WAAWF,aAAa,CAAC,GAC9D,CAACF,UAAU,EACb,EACA,MAAMD,OAAOM,WAAWR,OAAO,GAC/B,MAAME,OAAOM,WAAWR,OAAO,EACjC;AACF","names":["React","notifyManager","useQueryClient","useIsFetching","filters","queryClient","client","queryCache","getQueryCache","onStoreChange","subscribe","batchCalls","isFetching"],"sources":["C:\\todoAppMain\\node_modules\\@tanstack\\react-query\\src\\useIsFetching.ts"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { notifyManager } from '@tanstack/query-core'\n\nimport { useQueryClient } from './QueryClientProvider'\nimport type { QueryClient, QueryFilters } from '@tanstack/query-core'\n\nexport function useIsFetching(\n  filters?: QueryFilters,\n  queryClient?: QueryClient,\n): number {\n  const client = useQueryClient(queryClient)\n  const queryCache = client.getQueryCache()\n\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        queryCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [queryCache],\n    ),\n    () => client.isFetching(filters),\n    () => client.isFetching(filters),\n  )\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}