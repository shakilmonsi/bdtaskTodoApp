{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoAppMain\\\\src\\\\Pages\\\\UpdeteData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdeteData = _ref => {\n  _s();\n  let {\n    todoId,\n    onUpdate\n  } = _ref;\n  const [updatedTodo, setUpdatedTodo] = useState({});\n  useEffect(() => {\n    // Fetch the current todo item using its ID\n    fetch(`http://localhost:5000/todoapp/${todoId}`).then(response => response.json()).then(data => setUpdatedTodo(data));\n  }, [todoId]);\n  const handleUpdate = () => {\n    // Send a PUT request to update the todo item\n    fetch(`http://localhost:5000/todoapp/${todoId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTodo)\n    }).then(response => response.json()).then(data => {\n      onUpdate(data); // Notify the parent component about the update\n    });\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdatedTodo(prevTodo => ({\n      ...prevTodo,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Task:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"task\",\n        value: updatedTodo.task || '',\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Completed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"completed\",\n        checked: updatedTodo.completed || false,\n        onChange: () => setUpdatedTodo(prevTodo => ({\n          ...prevTodo,\n          completed: !prevTodo.completed\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success\",\n      onClick: handleUpdate,\n      children: \"Update Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdeteData, \"foGF0gSEhALEujX8FQzwJ7+2bcM=\");\n_c = UpdeteData;\nexport default UpdeteData;\nvar _c;\n$RefreshReg$(_c, \"UpdeteData\");","map":{"version":3,"names":["React","useState","useEffect","UpdeteData","todoId","onUpdate","updatedTodo","setUpdatedTodo","fetch","then","response","json","data","handleUpdate","method","headers","body","JSON","stringify","handleChange","e","name","value","target","prevTodo","task","completed"],"sources":["C:/todoAppMain/src/Pages/UpdeteData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst UpdeteData = ({ todoId, onUpdate }) => {\r\n  const [updatedTodo, setUpdatedTodo] = useState({});\r\n\r\n  useEffect(() => {\r\n    // Fetch the current todo item using its ID\r\n    fetch(`http://localhost:5000/todoapp/${todoId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setUpdatedTodo(data));\r\n  }, [todoId]);\r\n\r\n  const handleUpdate = () => {\r\n    // Send a PUT request to update the todo item\r\n    fetch(`http://localhost:5000/todoapp/${todoId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedTodo),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        onUpdate(data); // Notify the parent component about the update\r\n      });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedTodo((prevTodo) => ({\r\n      ...prevTodo,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Todo</h2>\r\n      <label>\r\n        Task:\r\n        <input type=\"text\" name=\"task\" value={updatedTodo.task || ''} onChange={handleChange} />\r\n      </label>\r\n      <label>\r\n        Completed:\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"completed\"\r\n          checked={updatedTodo.completed || false}\r\n          onChange={() =>\r\n            setUpdatedTodo((prevTodo) => ({\r\n              ...prevTodo,\r\n              completed: !prevTodo.completed,\r\n            }))\r\n          }\r\n        />\r\n      </label>\r\n      <button className='btn btn-success' onClick={handleUpdate}>Update Todo</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default UpdeteData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAEnD,MAAMC,UAAU,GAAG,QAA0B;EAAA;EAAA,IAAzB;IAAEC,MAAM;IAAEC;EAAS,CAAC;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd;IACAM,KAAK,CAAE,iCAAgCJ,MAAO,EAAC,CAAC,CAC7CK,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,cAAc,CAACK,IAAI,CAAC,CAAC;EACzC,CAAC,EAAE,CAACR,MAAM,CAAC,CAAC;EAEZ,MAAMS,YAAY,GAAG,MAAM;IACzB;IACAL,KAAK,CAAE,iCAAgCJ,MAAO,EAAC,EAAE;MAC/CU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,WAAW;IAClC,CAAC,CAAC,CACCG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC;EACN,CAAC;;EAED,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChChB,cAAc,CAAEiB,QAAQ,KAAM;MAC5B,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoB,eACpB;MAAA,iCAEE;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEhB,WAAW,CAACmB,IAAI,IAAI,EAAG;QAAC,QAAQ,EAAEN;MAAa;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClF,eACR;MAAA,sCAEE;QACE,IAAI,EAAC,UAAU;QACf,IAAI,EAAC,WAAW;QAChB,OAAO,EAAEb,WAAW,CAACoB,SAAS,IAAI,KAAM;QACxC,QAAQ,EAAE,MACRnB,cAAc,CAAEiB,QAAQ,KAAM;UAC5B,GAAGA,QAAQ;UACXE,SAAS,EAAE,CAACF,QAAQ,CAACE;QACvB,CAAC,CAAC;MACH;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACR;MAAQ,SAAS,EAAC,iBAAiB;MAAC,OAAO,EAAEb,YAAa;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB;EAAA;IAAA;IAAA;IAAA;EAAA,QAC3E;AAEV,CAAC;AAAC,GAzDIV,UAAU;AAAA,KAAVA,UAAU;AA8DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}