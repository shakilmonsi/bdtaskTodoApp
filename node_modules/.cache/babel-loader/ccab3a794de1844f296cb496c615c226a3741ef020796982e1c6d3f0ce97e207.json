{"ast":null,"code":"// src/index.ts\nimport { CancelledError } from \"./retryer.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { QueryClient } from \"./queryClient.js\";\nimport { QueryObserver } from \"./queryObserver.js\";\nimport { QueriesObserver } from \"./queriesObserver.js\";\nimport { InfiniteQueryObserver } from \"./infiniteQueryObserver.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { MutationObserver } from \"./mutationObserver.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { hashKey, replaceEqualDeep, isServer, matchQuery, keepPreviousData } from \"./utils.js\";\nimport { isCancelledError } from \"./retryer.js\";\nimport { dehydrate, hydrate, defaultShouldDehydrateQuery, defaultShouldDehydrateMutation } from \"./hydration.js\";\nexport * from \"./types.js\";\nimport { Query } from \"./query.js\";\nexport { CancelledError, InfiniteQueryObserver, MutationCache, MutationObserver, QueriesObserver, Query, QueryCache, QueryClient, QueryObserver, defaultShouldDehydrateMutation, defaultShouldDehydrateQuery, dehydrate, focusManager, hashKey, hydrate, isCancelledError, isServer, keepPreviousData, matchQuery, notifyManager, onlineManager, replaceEqualDeep };","map":{"version":3,"mappings":";AAEA,SAASA,sBAAsB;AAC/B,SAASC,kBAAkB;AAE3B,SAASC,mBAAmB;AAC5B,SAASC,qBAAqB;AAC9B,SAASC,uBAAuB;AAChC,SAASC,6BAA6B;AACtC,SAASC,qBAAqB;AAE9B,SAASC,wBAAwB;AACjC,SAASC,qBAAqB;AAC9B,SAASC,oBAAoB;AAC7B,SAASC,qBAAqB;AAC9B,SACEC,SACAC,kBACAC,UACAC,YACAC,wBACK;AAEP,SAASC,wBAAwB;AACjC,SACEC,WACAC,SACAC,6BACAC,sCACK;AAGP,cAAc;AAEd,SAASC,aAAa","names":["CancelledError","QueryCache","QueryClient","QueryObserver","QueriesObserver","InfiniteQueryObserver","MutationCache","MutationObserver","notifyManager","focusManager","onlineManager","hashKey","replaceEqualDeep","isServer","matchQuery","keepPreviousData","isCancelledError","dehydrate","hydrate","defaultShouldDehydrateQuery","defaultShouldDehydrateMutation","Query"],"sources":["C:\\todoAppMain\\node_modules\\@tanstack\\query-core\\src\\index.ts"],"sourcesContent":["/* istanbul ignore file */\n\nexport { CancelledError } from './retryer'\nexport { QueryCache } from './queryCache'\nexport type { QueryCacheNotifyEvent } from './queryCache'\nexport { QueryClient } from './queryClient'\nexport { QueryObserver } from './queryObserver'\nexport { QueriesObserver } from './queriesObserver'\nexport { InfiniteQueryObserver } from './infiniteQueryObserver'\nexport { MutationCache } from './mutationCache'\nexport type { MutationCacheNotifyEvent } from './mutationCache'\nexport { MutationObserver } from './mutationObserver'\nexport { notifyManager } from './notifyManager'\nexport { focusManager } from './focusManager'\nexport { onlineManager } from './onlineManager'\nexport {\n  hashKey,\n  replaceEqualDeep,\n  isServer,\n  matchQuery,\n  keepPreviousData,\n} from './utils'\nexport type { MutationFilters, QueryFilters, Updater } from './utils'\nexport { isCancelledError } from './retryer'\nexport {\n  dehydrate,\n  hydrate,\n  defaultShouldDehydrateQuery,\n  defaultShouldDehydrateMutation,\n} from './hydration'\n\n// Types\nexport * from './types'\nexport type { QueryState } from './query'\nexport { Query } from './query'\nexport type { Mutation, MutationState } from './mutation'\nexport type {\n  DehydrateOptions,\n  DehydratedState,\n  HydrateOptions,\n} from './hydration'\nexport type { QueriesObserverOptions } from './queriesObserver'\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}