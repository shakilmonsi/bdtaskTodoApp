{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoAppMain\\\\src\\\\Pages\\\\UpdeteData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdeteData = () => {\n  _s();\n  const [updateData, setUpdateData] = useState({\n    // Initialize with default values or empty strings\n    name: '',\n    email: ''\n    // ... other properties\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUpdateData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleUpdateData = async () => {\n    const id = 'your-document-id'; // Replace with the actual document ID\n\n    try {\n      const response = await axios.put(`http://localhost:5000/todoapp/${id}`, updateData);\n      console.log(response.data);\n    } catch (error) {\n      console.error('Error updating data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full\",\n        type: \"text\",\n        name: \"name\",\n        value: updateData.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-4\",\n        type: \"text\",\n        name: \"email\",\n        value: updateData.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleUpdateData,\n        children: \"Update Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdeteData, \"xsG2HaYaazSIYs099SIQvAWKpBo=\");\n_c = UpdeteData;\nexport default UpdeteData;\nvar _c;\n$RefreshReg$(_c, \"UpdeteData\");","map":{"version":3,"names":["React","useState","axios","UpdeteData","updateData","setUpdateData","name","email","handleInputChange","e","value","target","prevData","handleUpdateData","id","response","put","console","log","data","error"],"sources":["C:/todoAppMain/src/Pages/UpdeteData.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UpdeteData = () => {\r\n  const [updateData, setUpdateData] = useState({\r\n    // Initialize with default values or empty strings\r\n    name: '',\r\n    email: '',\r\n    // ... other properties\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdateData((prevData) => ({ ...prevData, [name]: value }));\r\n  };\r\n\r\n  const handleUpdateData = async () => {\r\n    const id = 'your-document-id'; // Replace with the actual document ID\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/todoapp/${id}`, updateData);\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.error('Error updating data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form>\r\n        <label>Name:</label>\r\n        <input \r\n        className='w-full'\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={updateData.name}\r\n          onChange={handleInputChange}\r\n        />\r\n        <label>Email:</label>\r\n        <input\r\n        className='w-full p-4'\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={updateData.email}\r\n          onChange={handleInputChange}\r\n        />\r\n        {/* Add more input fields for other properties */}\r\n        <button type=\"button\" onClick={handleUpdateData}>\r\n          Update Data\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default UpdeteData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGJ,QAAQ,CAAC;IAC3C;IACAK,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE;IACP;EACF,CAAC,CAAC;;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEH,IAAI;MAAEI;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCN,aAAa,CAAEO,QAAQ,KAAM;MAAE,GAAGA,QAAQ;MAAE,CAACN,IAAI,GAAGI;IAAM,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMG,gBAAgB,GAAG,YAAY;IACnC,MAAMC,EAAE,GAAG,kBAAkB,CAAC,CAAC;;IAE/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,iCAAgCF,EAAG,EAAC,EAAEV,UAAU,CAAC;MACnFa,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACE;IAAA,uBACE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAoB,eACpB;QACA,SAAS,EAAC,QAAQ;QAChB,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,KAAK,EAAEhB,UAAU,CAACE,IAAK;QACvB,QAAQ,EAAEE;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eACF;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QACA,SAAS,EAAC,YAAY;QACpB,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,OAAO;QACZ,KAAK,EAAEJ,UAAU,CAACG,KAAM;QACxB,QAAQ,EAAEC;MAAkB;QAAA;QAAA;QAAA;MAAA,QAC5B,eAEF;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEK,gBAAiB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEvC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GAlDIV,UAAU;AAAA,KAAVA,UAAU;AAsDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}