{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoAppMain\\\\src\\\\Pages\\\\UpdeteData.jsx\",\n  _s = $RefreshSig$();\n// In your React component\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdeteData = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [editedTask, setEditedTask] = useState({\n    id: null,\n    description: ''\n  });\n  useEffect(() => {\n    // Fetch todos from the server\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/api/todos');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const handleEdit = (id, description) => {\n    setEditedTask({\n      id,\n      description\n    });\n  };\n  const handleUpdate = async () => {\n    try {\n      await axios.put(`http://localhost:3001/api/todos/${editedTask.id}`, {\n        description: editedTask.description,\n        completed: editedTask.completed\n      });\n\n      // Update the local state after a successful update\n      const updatedTodos = todos.map(todo => todo._id === editedTask.id ? {\n        ...todo,\n        description: editedTask.description\n      } : todo);\n      setTodos(updatedTodos);\n      setEditedTask({\n        id: null,\n        description: ''\n      });\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(todo._id, todo.description),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), editedTask.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full\",\n        type: \"text\",\n        value: editedTask.description,\n        onChange: e => setEditedTask({\n          ...editedTask,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdeteData, \"7LcvW0LCq3TA0oVEZSI2jLggk/Y=\");\n_c = UpdeteData;\nexport default UpdeteData;\nvar _c;\n$RefreshReg$(_c, \"UpdeteData\");","map":{"version":3,"names":["React","useState","useEffect","axios","UpdeteData","todos","setTodos","editedTask","setEditedTask","id","description","fetchTodos","response","get","data","error","console","handleEdit","handleUpdate","put","completed","updatedTodos","map","todo","_id","e","target","value"],"sources":["C:/todoAppMain/src/Pages/UpdeteData.jsx"],"sourcesContent":["// In your React component\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UpdeteData = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [editedTask, setEditedTask] = useState({ id: null, description: '' });\r\n\r\n  useEffect(() => {\r\n    // Fetch todos from the server\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3001/api/todos');\r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (id, description) => {\r\n    setEditedTask({ id, description });\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      await axios.put(`http://localhost:3001/api/todos/${editedTask.id}`, {\r\n        description: editedTask.description,\r\n        completed: editedTask.completed,\r\n      });\r\n\r\n      // Update the local state after a successful update\r\n      const updatedTodos = todos.map(todo =>\r\n        todo._id === editedTask.id ? { ...todo, description: editedTask.description } : todo\r\n      );\r\n\r\n      setTodos(updatedTodos);\r\n      setEditedTask({ id: null, description: '' });\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {todos.map(todo => (\r\n          <li key={todo._id}>\r\n            {todo.description}\r\n            <button onClick={() => handleEdit(todo._id, todo.description)}>Edit</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      {editedTask.id && (\r\n        <div>\r\n          <input\r\n          className='w-full'\r\n            type=\"text\"\r\n            value={editedTask.description}\r\n            onChange={e => setEditedTask({ ...editedTask, description: e.target.value })}\r\n          />\r\n          <button onClick={handleUpdate}>Update</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default UpdeteData;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,EAAE,EAAE,IAAI;IAAEC,WAAW,EAAE;EAAG,CAAC,CAAC;EAE3ER,SAAS,CAAC,MAAM;IACd;IACAS,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,YAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,iCAAiC,CAAC;MACnEP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,MAAME,UAAU,GAAG,CAACR,EAAE,EAAEC,WAAW,KAAK;IACtCF,aAAa,CAAC;MAAEC,EAAE;MAAEC;IAAY,CAAC,CAAC;EACpC,CAAC;EAED,MAAMQ,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMf,KAAK,CAACgB,GAAG,CAAE,mCAAkCZ,UAAU,CAACE,EAAG,EAAC,EAAE;QAClEC,WAAW,EAAEH,UAAU,CAACG,WAAW;QACnCU,SAAS,EAAEb,UAAU,CAACa;MACxB,CAAC,CAAC;;MAEF;MACA,MAAMC,YAAY,GAAGhB,KAAK,CAACiB,GAAG,CAACC,IAAI,IACjCA,IAAI,CAACC,GAAG,KAAKjB,UAAU,CAACE,EAAE,GAAG;QAAE,GAAGc,IAAI;QAAEb,WAAW,EAAEH,UAAU,CAACG;MAAY,CAAC,GAAGa,IAAI,CACrF;MAEDjB,QAAQ,CAACe,YAAY,CAAC;MACtBb,aAAa,CAAC;QAAEC,EAAE,EAAE,IAAI;QAAEC,WAAW,EAAE;MAAG,CAAC,CAAC;IAC9C,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,oBACE;IAAA,wBACE;MAAA,UACGV,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACb;QAAA,WACGA,IAAI,CAACb,WAAW,eACjB;UAAQ,OAAO,EAAE,MAAMO,UAAU,CAACM,IAAI,CAACC,GAAG,EAAED,IAAI,CAACb,WAAW,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAc;MAAA,GAFrEa,IAAI,CAACC,GAAG;QAAA;QAAA;QAAA;MAAA,QAIlB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,EAEJjB,UAAU,CAACE,EAAE,iBACZ;MAAA,wBACE;QACA,SAAS,EAAC,QAAQ;QAChB,IAAI,EAAC,MAAM;QACX,KAAK,EAAEF,UAAU,CAACG,WAAY;QAC9B,QAAQ,EAAEe,CAAC,IAAIjB,aAAa,CAAC;UAAE,GAAGD,UAAU;UAAEG,WAAW,EAAEe,CAAC,CAACC,MAAM,CAACC;QAAM,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7E,eACF;QAAQ,OAAO,EAAET,YAAa;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QAEjD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAjEId,UAAU;AAAA,KAAVA,UAAU;AAsEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}