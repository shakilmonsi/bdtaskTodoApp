{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoAppMain\\\\src\\\\Pages\\\\PostData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostData = _ref => {\n  _s();\n  let {\n    todoId\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const imageHostKey = process.env.REACT_APP_imgbb_key;\n  useEffect(() => {\n    // If todoId is available, fetch and populate the form data for updating\n    if (todoId) {\n      fetch(`http://localhost:5000/todoapp/${todoId}`).then(res => res.json()).then(todo => {\n        setValue('name', todo.name);\n        setValue('email', todo.email);\n        // Additional fields based on your data structure\n      }).catch(error => console.error('Error fetching todo:', error));\n    }\n  }, [todoId, setValue]);\n  const handleAddOrUpdateTodo = data => {\n    const image = data.image[0];\n    const formData = new FormData();\n    formData.append('image', image);\n    const url = `https://api.imgbb.com/1/upload?key=${imageHostKey}`;\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(imgData => {\n      if (imgData.success) {\n        const todo = {\n          name: data.name,\n          email: data.email,\n          image: imgData.data.url\n        };\n\n        // Determine whether to add or update based on the availability of todoId\n        const apiUrl = todoId ? `http://localhost:5000/todoapp/${todoId}` : 'http://localhost:5000/todoapp';\n        const method = todoId ? 'PUT' : 'POST';\n        fetch(apiUrl, {\n          method,\n          headers: {\n            'content-type': 'application/json',\n            authorization: `bearer ${localStorage.getItem('accessToken')}`\n          },\n          body: JSON.stringify(todo)\n        }).then(res => res.json()).then(result => {\n          console.log(result);\n          const action = todoId ? 'updated' : 'added';\n          toast.success(`${data.name} is ${action} successfully`);\n        }).catch(error => {\n          console.error('Error adding/updating todo:', error);\n          toast.error(`Failed to ${todoId ? 'update' : 'add'} todo`);\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-96 p-7\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl text-green-900 font-bold\",\n      children: \"Add/Update ToDoUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleAddOrUpdateTodo),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-accent w-full mt-4\",\n        value: todoId ? 'Update ToDoUser' : 'Add ToDoUser',\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PostData, \"FZztwHo3rqCv+0dyNApLDgqz7nA=\", false, function () {\n  return [useForm];\n});\n_c = PostData;\nexport default PostData;\nvar _c;\n$RefreshReg$(_c, \"PostData\");","map":{"version":3,"names":["React","useState","useEffect","useForm","toast","PostData","todoId","register","handleSubmit","setValue","formState","errors","imageHostKey","process","env","REACT_APP_imgbb_key","fetch","then","res","json","todo","name","email","catch","error","console","handleAddOrUpdateTodo","data","image","formData","FormData","append","url","method","body","imgData","success","apiUrl","headers","authorization","localStorage","getItem","JSON","stringify","result","log","action"],"sources":["C:/todoAppMain/src/Pages/PostData.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst PostData = ({ todoId }) => {\r\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm();\r\n\r\n  const imageHostKey = process.env.REACT_APP_imgbb_key;\r\n\r\n  useEffect(() => {\r\n    // If todoId is available, fetch and populate the form data for updating\r\n    if (todoId) {\r\n      fetch(`http://localhost:5000/todoapp/${todoId}`)\r\n        .then(res => res.json())\r\n        .then(todo => {\r\n          setValue('name', todo.name);\r\n          setValue('email', todo.email);\r\n          // Additional fields based on your data structure\r\n        })\r\n        .catch(error => console.error('Error fetching todo:', error));\r\n    }\r\n  }, [todoId, setValue]);\r\n\r\n  const handleAddOrUpdateTodo = data => {\r\n    const image = data.image[0];\r\n    const formData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    const url = `https://api.imgbb.com/1/upload?key=${imageHostKey}`;\r\n    fetch(url, {\r\n      method: 'POST',\r\n      body: formData\r\n    })\r\n    .then(res => res.json())\r\n    .then(imgData => {\r\n      if (imgData.success) {\r\n        const todo = {\r\n          name: data.name,\r\n          email: data.email,\r\n          image: imgData.data.url\r\n        };\r\n\r\n        // Determine whether to add or update based on the availability of todoId\r\n        const apiUrl = todoId\r\n          ? `http://localhost:5000/todoapp/${todoId}`\r\n          : 'http://localhost:5000/todoapp';\r\n\r\n        const method = todoId ? 'PUT' : 'POST';\r\n\r\n        fetch(apiUrl, {\r\n          method,\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            authorization: `bearer ${localStorage.getItem('accessToken')}`\r\n          },\r\n          body: JSON.stringify(todo)\r\n        })\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          console.log(result);\r\n          const action = todoId ? 'updated' : 'added';\r\n          toast.success(`${data.name} is ${action} successfully`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error adding/updating todo:', error);\r\n          toast.error(`Failed to ${todoId ? 'update' : 'add'} todo`);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='w-96 p-7'>\r\n      <h2 className=\"text-4xl text-green-900 font-bold\">Add/Update ToDoUser</h2>\r\n      <form onSubmit={handleSubmit(handleAddOrUpdateTodo)}>\r\n        {/* Form fields go here, similar to your existing form */}\r\n\r\n        <input className='btn btn-accent w-full mt-4' value={todoId ? 'Update ToDoUser' : 'Add ToDoUser'} type=\"submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}