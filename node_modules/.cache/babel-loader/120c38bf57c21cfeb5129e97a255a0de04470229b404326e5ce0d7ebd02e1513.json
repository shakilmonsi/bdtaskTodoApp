{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoAppMain\\\\src\\\\Pages\\\\PostData.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostData = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const imageHostKey = process.env.REACT_APP_imgbb_key;\n  const handleAddDoctor = data => {\n    const image = data.image[0];\n    const formData = new FormData();\n    formData.append('image', image);\n    const url = `https://api.imgbb.com/1/upload?key=${imageHostKey}`;\n    fetch(url, {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(imgData => {\n      if (imgData.success) {\n        console.log(imgData.data.url);\n        const doctor = {\n          name: data.name,\n          email: data.email,\n          specialty: data.specialty,\n          image: imgData.data.url\n        };\n\n        // save doctor information to the database\n        fetch('http://localhost:5000/todoapp', {\n          method: 'POST',\n          headers: {\n            'content-type': 'application/json',\n            authorization: `bearer ${localStorage.getItem('accessToken')}`\n          },\n          body: JSON.stringify(doctor)\n        }).then(res => res.json()).then(result => {\n          console.log(result);\n          toast.success(`${data.name} is added successfully`);\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-96 p-7\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-4xl\",\n      children: \"Add A Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleAddDoctor),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full max-w-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          ...register(\"name\", {\n            required: \"Name is Required\"\n          }),\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: errors.name.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full max-w-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          ...register(\"email\", {\n            required: true\n          }),\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: errors.email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control w-full max-w-xs\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"label-text\",\n            children: \"Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ...register(\"image\", {\n            required: \"Photo is Required\"\n          }),\n          className: \"input input-bordered w-full max-w-xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), errors.img && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-red-500\",\n          children: errors.img.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"btn btn-accent w-full mt-4\",\n        value: \"Add Doctor\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n/**\r\n * Three places to store images\r\n * 1. Third party image hosting server \r\n * 2. File system of your server\r\n * 3. mongodb (database)\r\n*/\n_s(PostData, \"cSudtlZF25wA1QXS6hk7TRnoNuU=\", false, function () {\n  return [useForm];\n});\n_c = PostData;\nexport default PostData;\nvar _c;\n$RefreshReg$(_c, \"PostData\");","map":{"version":3,"names":["React","useForm","toast","PostData","register","handleSubmit","formState","errors","imageHostKey","process","env","REACT_APP_imgbb_key","handleAddDoctor","data","image","formData","FormData","append","url","fetch","method","body","then","res","json","imgData","success","console","log","doctor","name","email","specialty","headers","authorization","localStorage","getItem","JSON","stringify","result","required","message","img"],"sources":["C:/todoAppMain/src/Pages/PostData.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport toast from 'react-hot-toast';\r\n\r\n\r\nconst PostData = () => {\r\n    const { register, handleSubmit, formState: { errors } } = useForm();\r\n    \r\n    const imageHostKey = process.env.REACT_APP_imgbb_key;\r\n\r\n\r\n   \r\n\r\n    const handleAddDoctor = data => {\r\n        const image = data.image[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image);\r\n        const url = `https://api.imgbb.com/1/upload?key=${imageHostKey}`\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: formData\r\n        })\r\n        .then(res => res.json())\r\n        .then(imgData => {\r\n            if(imgData.success){\r\n                console.log(imgData.data.url);\r\n                const doctor = {\r\n                    name: data.name, \r\n                    email: data.email,\r\n                    specialty: data.specialty,\r\n                    image: imgData.data.url\r\n                }\r\n\r\n                // save doctor information to the database\r\n                fetch('http://localhost:5000/todoapp', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'content-type': 'application/json', \r\n                        authorization: `bearer ${localStorage.getItem('accessToken')}`\r\n                    },\r\n                    body: JSON.stringify(doctor)\r\n                })\r\n                .then(res => res.json())\r\n                .then(result =>{\r\n                    console.log(result);\r\n                    toast.success(`${data.name} is added successfully`);\r\n              \r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <div className='w-96 p-7'>\r\n            <h2 className=\"text-4xl\">Add A Doctor</h2>\r\n            <form onSubmit={handleSubmit(handleAddDoctor)}>\r\n                <div className=\"form-control w-full max-w-xs\">\r\n                    <label className=\"label\"> <span className=\"label-text\">Name</span></label>\r\n                    <input type=\"text\" {...register(\"name\", {\r\n                        required: \"Name is Required\"\r\n                    })} className=\"input input-bordered w-full max-w-xs\" />\r\n                    {errors.name && <p className='text-red-500'>{errors.name.message}</p>}\r\n                </div>\r\n                <div className=\"form-control w-full max-w-xs\">\r\n                    <label className=\"label\"> <span className=\"label-text\">Email</span></label>\r\n                    <input type=\"email\" {...register(\"email\", {\r\n                        required: true\r\n                    })} className=\"input input-bordered w-full max-w-xs\" />\r\n                    {errors.email && <p className='text-red-500'>{errors.email.message}</p>}\r\n                </div>\r\n           \r\n                <div className=\"form-control w-full max-w-xs\">\r\n                    <label className=\"label\"> <span className=\"label-text\">Photo</span></label>\r\n                    <input type=\"file\" {...register(\"image\", {\r\n                        required: \"Photo is Required\"\r\n                    })} className=\"input input-bordered w-full max-w-xs\" />\r\n                    {errors.img && <p className='text-red-500'>{errors.img.message}</p>}\r\n                </div>\r\n                <input className='btn btn-accent w-full mt-4' value=\"Add Doctor\" type=\"submit\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * Three places to store images\r\n * 1. Third party image hosting server \r\n * 2. File system of your server\r\n * 3. mongodb (database)\r\n*/\r\n\r\n\r\nexport default PostData;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,iBAAiB;AAAC;AAGpC,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM;IAAEC,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGN,OAAO,EAAE;EAEnE,MAAMO,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;EAKpD,MAAMC,eAAe,GAAGC,IAAI,IAAI;IAC5B,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC;IAC3B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;IAC/B,MAAMI,GAAG,GAAI,sCAAqCV,YAAa,EAAC;IAChEW,KAAK,CAACD,GAAG,EAAE;MACPE,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACV,CAAC,CAAC,CACDO,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,OAAO,IAAI;MACb,IAAGA,OAAO,CAACC,OAAO,EAAC;QACfC,OAAO,CAACC,GAAG,CAACH,OAAO,CAACZ,IAAI,CAACK,GAAG,CAAC;QAC7B,MAAMW,MAAM,GAAG;UACXC,IAAI,EAAEjB,IAAI,CAACiB,IAAI;UACfC,KAAK,EAAElB,IAAI,CAACkB,KAAK;UACjBC,SAAS,EAAEnB,IAAI,CAACmB,SAAS;UACzBlB,KAAK,EAAEW,OAAO,CAACZ,IAAI,CAACK;QACxB,CAAC;;QAED;QACAC,KAAK,CAAC,+BAA+B,EAAE;UACnCC,MAAM,EAAE,MAAM;UACda,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;YAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAE;UACjE,CAAC;UACDf,IAAI,EAAEgB,IAAI,CAACC,SAAS,CAACT,MAAM;QAC/B,CAAC,CAAC,CACDP,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACiB,MAAM,IAAG;UACXZ,OAAO,CAACC,GAAG,CAACW,MAAM,CAAC;UACnBrC,KAAK,CAACwB,OAAO,CAAE,GAAEb,IAAI,CAACiB,IAAK,wBAAuB,CAAC;QAEvD,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;EACN,CAAC;EAID,oBACI;IAAK,SAAS,EAAC,UAAU;IAAA,wBACrB;MAAI,SAAS,EAAC,UAAU;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC1C;MAAM,QAAQ,EAAEzB,YAAY,CAACO,eAAe,CAAE;MAAA,wBAC1C;QAAK,SAAS,EAAC,8BAA8B;QAAA,wBACzC;UAAO,SAAS,EAAC,OAAO;UAAA,6BAAE;YAAM,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAY;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC1E;UAAO,IAAI,EAAC,MAAM;UAAA,GAAKR,QAAQ,CAAC,MAAM,EAAE;YACpCoC,QAAQ,EAAE;UACd,CAAC,CAAC;UAAE,SAAS,EAAC;QAAsC;UAAA;UAAA;UAAA;QAAA,QAAG,EACtDjC,MAAM,CAACuB,IAAI,iBAAI;UAAG,SAAS,EAAC,cAAc;UAAA,UAAEvB,MAAM,CAACuB,IAAI,CAACW;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACnE,eACN;QAAK,SAAS,EAAC,8BAA8B;QAAA,wBACzC;UAAO,SAAS,EAAC,OAAO;UAAA,6BAAE;YAAM,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3E;UAAO,IAAI,EAAC,OAAO;UAAA,GAAKrC,QAAQ,CAAC,OAAO,EAAE;YACtCoC,QAAQ,EAAE;UACd,CAAC,CAAC;UAAE,SAAS,EAAC;QAAsC;UAAA;UAAA;UAAA;QAAA,QAAG,EACtDjC,MAAM,CAACwB,KAAK,iBAAI;UAAG,SAAS,EAAC,cAAc;UAAA,UAAExB,MAAM,CAACwB,KAAK,CAACU;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACrE,eAEN;QAAK,SAAS,EAAC,8BAA8B;QAAA,wBACzC;UAAO,SAAS,EAAC,OAAO;UAAA,6BAAE;YAAM,SAAS,EAAC,YAAY;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa;QAAA;UAAA;UAAA;UAAA;QAAA,QAAQ,eAC3E;UAAO,IAAI,EAAC,MAAM;UAAA,GAAKrC,QAAQ,CAAC,OAAO,EAAE;YACrCoC,QAAQ,EAAE;UACd,CAAC,CAAC;UAAE,SAAS,EAAC;QAAsC;UAAA;UAAA;UAAA;QAAA,QAAG,EACtDjC,MAAM,CAACmC,GAAG,iBAAI;UAAG,SAAS,EAAC,cAAc;UAAA,UAAEnC,MAAM,CAACmC,GAAG,CAACD;QAAO;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACjE,eACN;QAAO,SAAS,EAAC,4BAA4B;QAAC,KAAK,EAAC,YAAY;QAAC,IAAI,EAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9E;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AALA,GAlFMtC,QAAQ;EAAA,QACgDF,OAAO;AAAA;AAAA,KAD/DE,QAAQ;AA0Fd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}